define(["require","exports","./languageMode"],function(require,exports,mode){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Emitter=monaco.Emitter;var LanguageServiceDefaultsImpl=function(){function LanguageServiceDefaultsImpl(languageId,diagnosticsOptions){this._onDidChange=new Emitter;this._languageId=languageId;this.setDiagnosticsOptions(diagnosticsOptions)}Object.defineProperty(LanguageServiceDefaultsImpl.prototype,"onDidChange",{get:function(){return this._onDidChange.event},enumerable:true,configurable:true});Object.defineProperty(LanguageServiceDefaultsImpl.prototype,"languageId",{get:function(){return this._languageId},enumerable:true,configurable:true});Object.defineProperty(LanguageServiceDefaultsImpl.prototype,"diagnosticsOptions",{get:function(){return this._diagnosticsOptions},enumerable:true,configurable:true});LanguageServiceDefaultsImpl.prototype.setDiagnosticsOptions=function(options){this._diagnosticsOptions=options||Object.create(null);this._onDidChange.fire(this)};LanguageServiceDefaultsImpl.prototype.setMaximunWorkerIdleTime=function(){this._workerMaxIdleTime=5*1e3};return LanguageServiceDefaultsImpl}();exports.LanguageServiceDefaultsImpl=LanguageServiceDefaultsImpl;var diagnosticDefault={validate:true,lint:{compatibleVendorPrefixes:"ignore",vendorPrefix:"warning",duplicateProperties:"warning",emptyRules:"warning",importStatement:"ignore",boxModel:"ignore",universalSelector:"ignore",zeroUnits:"ignore",fontFaceProperties:"warning",hexColorLength:"error",argumentsInColorFunction:"error",unknownProperties:"warning",ieHack:"ignore",unknownVendorSpecificProperties:"ignore",propertyIgnoredDueToDisplay:"warning",important:"ignore",float:"ignore",idSelector:"ignore"}};function createAPI(languageId){return{sqlDefaults:new LanguageServiceDefaultsImpl(languageId,diagnosticDefault)}}function init(languageId,options){return new Promise(function(resolve){monaco.languages.register({id:languageId});monaco.languages[languageId]=createAPI(languageId);getMode().then(function(mode){mode.setupMode(new LanguageServiceDefaultsImpl(languageId,diagnosticDefault),options);resolve()})})}exports.init=init;function cleanCache(){mode.CompletionAdapter.cleanCache()}exports.cleanCache=cleanCache;function updateOptions(options){mode.CompletionAdapter.updateOptions(options)}exports.updateOptions=updateOptions;function recycling(){mode.recycling()}exports.recycling=recycling;function getMode(){return monaco.Promise.wrap(new Promise(function(resolve_1,reject_1){require(["./languageMode"],resolve_1,reject_1)}))}});